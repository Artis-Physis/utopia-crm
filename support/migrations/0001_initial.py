# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-12-14 15:53
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('logistics', '0001_initial'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('category', models.CharField(blank=True, choices=[(b'L', 'Logistics'), (b'I', 'Invoicing'), (b'C', 'Contents'), (b'W', 'Web'), (b'S', 'Service'), (b'O', 'Community')], max_length=1, null=True)),
                ('subcategory', models.CharField(blank=True, choices=[(b'L01', 'Did not arrive'), (b'L02', 'Arrived late'), (b'L03', 'Arrived wet'), (b'L04', 'Changed delivery place'), (b'L05', 'Not delivered'), (b'L06', 'Delivered to a wrong place'), (b'L07', 'Wrong label'), (b'L08', 'Wrong invoice delivered'), (b'L10', 'Paused route'), (b'I01', "Product doesn't belong"), (b'I02', 'Price issue'), (b'I03', 'Payment type issue'), (b'I04', 'Subscription not being billed'), (b'I05', 'Payment type change'), (b'I06', 'Collection issue (active subscription)'), (b'I07', 'Collection issue (inactive subscription)'), (b'I08', 'Credit card expiration'), (b'C01', 'Suggestions'), (b'C02', 'Complaints'), (b'C03', 'Corrections'), (b'C04', 'Requests'), (b'C05', 'Contact journalist'), (b'C06', 'Forward content'), (b'W01', 'Access (sign-in)'), (b'W02', 'Registry (sign-up)'), (b'W03', 'Website not available'), (b'W04', 'Settings issue'), (b'W05', 'Articles limit reached'), (b'W06', 'Not using service'), (b'S01', 'Promotion request'), (b'S02', 'Register new subscription'), (b'S03', 'End subscription'), (b'S04', 'Schedule subscription pause'), (b'S05', 'Schedule address change'), (b'S06', 'Vacation (Resorts)'), (b'S07', 'Newsletters'), (b'S08', 'Complaints on service'), (b'S09', 'Payment types'), (b'S10', 'Errors in data'), (b'S11', 'Special cases'), (b'S12', 'Schedule task'), (b'O01', 'Community Benefits'), (b'O02', 'Community Events'), (b'O03', 'Caf\xe9'), (b'O04', 'Media-lab'), (b'O05', 'Shop'), (b'O06', 'Community Suggestions'), (b'O07', 'Community Complaints'), (b'O08', 'Community Requests'), (b'O09', 'Polls/Surveys')], max_length=3, null=True)),
                ('inside', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('progress', models.TextField(blank=True, null=True)),
                ('answer_1', models.CharField(blank=True, choices=[(b'I1', 'Collected'), (b'L1', 'Delivered again')], max_length=2, null=True)),
                ('answer_2', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[(b'P', 'Pending'), (b'A', 'Assigned'), (b'I', 'In progress'), (b'D', 'Derived'), (b'N', 'Notify'), (b'S', 'Solved'), (b'X', 'No solution')], default='P', max_length=1, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('next_action_date', models.DateField(blank=True, null=True)),
                ('closing_date', models.DateField(blank=True, null=True)),
                ('copies', models.PositiveSmallIntegerField(default=0)),
                ('address_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='issue_address_1', to='core.Address')),
                ('address_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='issue_address_2', to='core.Address')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='issue_assigned', to=settings.AUTH_USER_MODEL)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Contact', verbose_name='Contact')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='issue_manager', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Product')),
                ('route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='logistics.Route')),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Subscription')),
                ('subscription_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.SubscriptionProduct')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduledTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[(b'AC', 'Address change'), (b'PD', 'Deactivation (Pause)'), (b'PA', 'Activation (Pause)')], max_length=2, verbose_name='Type')),
                ('completed', models.BooleanField(default=False, verbose_name='Completed')),
                ('execution_date', models.DateField(verbose_name='Date of execution')),
                ('creation_date', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('modification_date', models.DateField(auto_now=True, null=True, verbose_name='Modification date')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Address', verbose_name='Address')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Contact', verbose_name='Contact')),
                ('issue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='support.Issue')),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Subscription')),
                ('subscription_products', models.ManyToManyField(to='core.SubscriptionProduct')),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='Name')),
                ('internal', models.BooleanField(default=False, verbose_name='Is internal?')),
                ('old_pk', models.PositiveIntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'seller',
                'verbose_name_plural': 'sellers',
            },
        ),
    ]
